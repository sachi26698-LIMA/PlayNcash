rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null; }
    function isAdmin() { return isSignedIn() && request.auth.token.admin == true; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }

    match /users/{uid} {
      allow read: if isOwner(uid) || isAdmin();
      allow update: if isOwner(uid) && !(("admin" in request.resource.data) || ("coins" in request.resource.data) || ("lockedCoins" in request.resource.data) || ("referrer" in request.resource.data));
      allow create: if isOwner(uid);
    }

    match /wallets/{uid} {
      allow read: if isOwner(uid) || isAdmin();
      allow write: if false;
    }

    match /transactions/{txId} {
      allow read: if isSignedIn() && resource.data.uid == request.auth.uid || isAdmin();
      allow write: if false;
    }

    match /redeemCodes/{code} {
      allow read, write: if isAdmin();
    }

    match /withdrawRequests/{id} {
      allow read: if isAdmin() || (isSignedIn() && resource.data.uid == request.auth.uid);
      allow write: if false;
    }

    match /inbox/{uid}/msgs/{msgId} {
      allow read: if isOwner(uid) || isAdmin();
      allow write: if false;
    }

    // Leaderboards public read, server-only write
    match /leaderboardDaily/{date}/{uid} {
      allow read: if true;
      allow write: if false;
    }
    match /leaderboardMonthly/{ym}/{uid} {
      allow read: if true;
      allow write: if false;
    }

    // Sessions/daily counters server only
    match /limits/{uid}/{docId} {
      allow read: if isOwner(uid) || isAdmin();
      allow write: if false;
    }

    // Referrals (read own)
    match /referrals/{uid} {
      allow read: if isOwner(uid) || isAdmin();
      allow write: if false;
    }
  }
}
